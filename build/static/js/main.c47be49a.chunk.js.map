{"version":3,"sources":["components/sidebar/Sidebar.jsx","redux/userRedux.js","requestMethods.js","redux/productRedux.js","redux/apiCalls.js","components/topbar/Topbar.jsx","firebase.js","pages/newProduct/NewProduct.jsx","pages/login/Login.jsx","App.js","redux/store.js","index.js"],"names":["Sidebar","className","to","Storefront","userSlice","createSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","actions","BASE_URL","user","JSON","parse","localStorage","getItem","TOKEN","accessToken","console","log","publicRequest","axios","create","baseURL","userRequest","headers","token","productSlice","products","getProductStart","getProductSuccess","getProductFailure","deleteProductStart","deleteProductSuccess","splice","findIndex","item","_id","deleteProductFailure","updateProductStart","updateProductSuccess","id","product","updateProductFailure","addProductStart","addProductSuccess","push","addProductFailure","login","dispatch","a","post","res","data","addProduct","lgout","MenuItem","styled","div","Topbar","useDispatch","handleClick","onClick","style","textDecoration","color","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","NewProduct","useState","inputs","setInputs","file","setFile","cat","setCat","handleChange","e","prev","target","value","type","onChange","files","placeholder","split","preventDefault","fileName","Date","getTime","storage","getStorage","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","img","categories","alert","Container","Wrapper","Title","h1","Form","form","Input","input","Button","button","Error","span","Login","username","setUsername","password","setPassword","useSelector","disabled","App","volunteer","volunteer1","isVolunteer","err","path","persistConfig","key","version","rootReducer","combineReducers","userReducer","productReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c47be49a.chunk.js","sourcesContent":["import \"./sidebar.css\";\nimport {\n  LineStyle,\n  Timeline,\n  TrendingUp,\n  PermIdentity,\n  Storefront,\n  AttachMoney,\n  BarChart,\n  MailOutline,\n  DynamicFeed,\n  ChatBubbleOutline,\n  WorkOutline,\n  Report,\n} from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Dashboard</h3>\n          <ul className=\"sidebarList\">\n            {/* <Link to=\"/\" className=\"link\">\n            <li className=\"sidebarListItem\">\n              <LineStyle className=\"sidebarIcon\" />\n              Home\n            </li>\n            </Link>\n            <li className=\"sidebarListItem\">\n              <Timeline className=\"sidebarIcon\" />\n              Analytics\n            </li>\n            <li className=\"sidebarListItem\">\n              <TrendingUp className=\"sidebarIcon\" />\n              Sales\n            </li>\n          </ul>\n        </div>\n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Quick Menu</h3>\n          <ul className=\"sidebarList\">\n            <Link to=\"/users\" className=\"link\">\n              <li className=\"sidebarListItem\">\n                <PermIdentity className=\"sidebarIcon\" />\n                Users\n              </li>\n            </Link> */}\n            <Link to=\"/newproduct\" className=\"link\">\n              <li className=\"sidebarListItem\">\n                <Storefront className=\"sidebarIcon\" />\n                Products\n              </li>\n            </Link>\n            {/* <li className=\"sidebarListItem\">\n              <AttachMoney className=\"sidebarIcon\" />\n              Transactions\n            </li>\n            <li className=\"sidebarListItem\">\n              <BarChart className=\"sidebarIcon\" />\n              Reports\n            </li> */}\n          </ul>\n        </div>\n        {/* <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Notifications</h3>\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem\">\n              <MailOutline className=\"sidebarIcon\" />\n              Mail\n            </li>\n            <li className=\"sidebarListItem\">\n              <DynamicFeed className=\"sidebarIcon\" />\n              Feedback\n            </li>\n            <li className=\"sidebarListItem\">\n              <ChatBubbleOutline className=\"sidebarIcon\" />\n              Messages\n            </li>\n          </ul>\n        </div>\n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Staff</h3>\n          <ul className=\"sidebarList\">\n            <li className=\"sidebarListItem\">\n              <WorkOutline className=\"sidebarIcon\" />\n              Manage\n            </li>\n            <li className=\"sidebarListItem\">\n              <Timeline className=\"sidebarIcon\" />\n              Analytics\n            </li>\n            <li className=\"sidebarListItem\">\n              <Report className=\"sidebarIcon\" />\n              Reports\n            </li>\n          </ul>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false,\n  },\n  reducers: {\n    loginStart: (state) => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    logout: (state) => {\n      state.currentUser = null;\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout } = userSlice.actions;\nexport default userSlice.reducer;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://greengrocery30.herokuapp.com/api/\";\nconst user = JSON.parse(localStorage.getItem(\"persist:root\"))?.user;\nconst currentUser = user && JSON.parse(user).currentUser;\nconst TOKEN = currentUser?.accessToken;\nconsole.log(TOKEN);\n// const TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTI0ZjM4NjRhODM2YTJiZTFiYWZlMyIsImlzQWRtaW4iOnRydWUsImlhdCI6MTY0MTQwMzcwNiwiZXhwIjoxNjQxNjYyOTA2fQ.EZtcGIGYBot_G8wtwHsIEDMmZLFKe3tUVXVFfyPrhyc\";\n\n// console.log(localStorage.getItem(\"persist:root\"));\n\nexport const publicRequest = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const userRequest = axios.create({\n  baseURL: BASE_URL,\n  headers: { token: `Bearer ${TOKEN}` },\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    products: [],\n    isFetching: false,\n    error: false,\n  },\n  reducers: {\n    //GET ALL\n    getProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products = action.payload;\n    },\n    getProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //DELETE\n    deleteProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.splice(\n        state.products.findIndex((item) => item._id === action.payload),\n        1\n      );\n    },\n    deleteProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //UPDATE\n    updateProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updateProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products[\n        state.products.findIndex((item) => item._id === action.payload.id)\n      ] = action.payload.product;\n    },\n    updateProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //UPDATE\n    addProductStart: (state) => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.push(action.payload);\n    },\n    addProductFailure: (state) => {\n      state.isFetching = false;\n      state.error = true;\n    },\n  },\n});\n\nexport const {\n  getProductStart,\n  getProductSuccess,\n  getProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  deleteProductFailure,\n  updateProductStart,\n  updateProductSuccess,\n  updateProductFailure,\n  addProductStart,\n  addProductSuccess,\n  addProductFailure,\n} = productSlice.actions;\n\nexport default productSlice.reducer;\n","import { loginFailure, loginStart, loginSuccess, logout } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport {\n  getProductFailure,\n  getProductStart,\n  getProductSuccess,\n  deleteProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  updateProductFailure,\n  updateProductStart,\n  updateProductSuccess,\n  addProductFailure,\n  addProductStart,\n  addProductSuccess,\n} from \"./productRedux\";\n\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\n\nexport const getProducts = async (dispatch) => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\n\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\n\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n  try {\n    // update\n    dispatch(updateProductSuccess({ id, product }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    console.log(\"in product\");\n    dispatch(addProductFailure());\n  }\n};\n\nexport const lgout = (dispatch) => {\n  dispatch(logout());\n};","import React from \"react\";\nimport \"./topbar.css\";\nimport { lgout } from \"../../redux/apiCalls\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nimport { NotificationsNone, Language, Settings, ExitToApp } from \"@material-ui/icons\";\n\n\nconst MenuItem = styled.div`\n  text-decoration: underline;\n  font-size: 17px;\n  cursor: pointer;\n  margin-left: 25px;\n`;\n\nexport default function Topbar() {\n  const dispatch = useDispatch();\n\n  const handleClick = async () => {\n    console.log(\"hello\");\n    lgout(dispatch);\n  };\n  return (\n    <div className=\"topbar\">\n      <div className=\"topbarWrapper\">\n        <div className=\"topLeft\">\n          <span className=\"logo\">Volunteer</span>\n        </div>\n        <div className=\"topRight\">\n          {/* <div className=\"topbarIconContainer\">\n            <NotificationsNone />\n            <span className=\"topIconBadge\">0</span>\n          </div>\n          <div className=\"topbarIconContainer\">\n            <Language />\n            <span className=\"topIconBadge\">0</span>\n          </div>\n          <div className=\"topbarIconContainer\">\n            <Settings />\n          </div> */}\n          <Link to=\"/\" onClick={handleClick} style={{ textDecoration: 'none', color: 'black' }}>\n              <MenuItem style={{ textDecoration: 'none', color: 'black' }}><b>Logout</b></MenuItem>\n            </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB7S0XtlD0TjUigf896hpMFO6zyOqGoXUA\",\n  authDomain: \"shop-de1b6.firebaseapp.com\",\n  projectId: \"shop-de1b6\",\n  storageBucket: \"shop-de1b6.appspot.com\",\n  messagingSenderId: \"334968057132\",\n  appId: \"1:334968057132:web:818e8c68cc7c2bf9461089\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default app;\n\n","import { useState } from \"react\";\nimport \"./newProduct.css\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport app from \"../../firebase\";\nimport { addProduct } from \"../../redux/apiCalls\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function NewProduct() {\n  const [inputs, setInputs] = useState({});\n  const [file, setFile] = useState(null);\n  const [cat, setCat] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setInputs((prev) => {\n      return { ...prev, [e.target.name]: e.target.value };\n    });\n  };\n  const handleCat = (e) => {\n    setCat(e.target.value.split(\",\"));\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    // addProduct(product, dispatch);\n    const fileName = new Date().getTime() + file.name;\n    const storage = getStorage(app);\n    const storageRef = ref(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    // alert(\"Product has been created successfully!\");\n    // Register three observers:\n    // 1. 'state_changed' observer, called any time the state changes\n    // 2. Error observer, called on failure\n    // 3. Completion observer, called on successful completion\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log(\"Upload is \" + progress + \"% done\");\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n          default:\n        }\n        \n      },\n      (error) => {\n        // Handle unsuccessful uploads\n      },\n      () => {\n    //     // Handle successful uploads on complete\n    //     // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          const product = { ...inputs, img: downloadURL, categories: cat };\n          addProduct(product, dispatch);\n        });\n      },\n      alert(\"Product has been created successfully!\"),\n    );\n  };\n\n  return (\n    <div className=\"newProduct\">\n      <h1 className=\"addProductTitle\">New Product</h1>\n      <form className=\"addProductForm\">\n        <div className=\"addProductItem\">\n          <label>Image</label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            onChange={(e) => setFile(e.target.files[0])}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Title</label>\n          <input\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Mango...\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Description</label>\n          <input\n            name=\"desc\"\n            type=\"text\"\n            placeholder=\"Description...\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Price</label>\n          <input\n            name=\"price\"\n            type=\"number\"\n            placeholder=\"100\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Categories</label>\n          <input type=\"text\" placeholder=\"Fruit, Vegetable\" onChange={handleCat} />\n        </div>\n        {/* <div className=\"addProductItem\">\n          <label>Color</label>\n          <select name=\"color\" onChange={handleChange}>\n            <option value=\"red\">Red</option>\n            <option value=\"orange\">Orange</option>\n            <option value=\"pink\">Pink</option>\n            <option value=\"black\">Black</option>\n            <option value=\"brown\">Brown</option>\n          </select>\n        </div> */}\n        <div className=\"addProductItem\">\n          <label>Stock</label>\n          <select name=\"inStock\" onChange={handleChange}>\n            <option value=\"true\">Yes</option>\n            <option value=\"false\">No</option>\n          </select>\n        </div>\n        {/* <Link to=\"/success\"> */}\n        <button onClick={handleClick} className=\"addProductButton\">\n          Create\n        </button>\n        {/* </Link> */}\n      </form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { login } from \"../../redux/apiCalls\";\n// import { mobile } from \"../responsive\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(to right,\n      rgba(121, 17, 9, 100),\n      rgba(0, 93, 255, 100)\n    );\n    // background-image: linear-gradient(to right, red , blue);\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  border-radius: 2.5%;\n  width: 36%;\n  height: 36%;\n  padding: 20px;\n  background-color: white;\n  align-items: center;\n  \n`;\n\nconst Title = styled.h1`\n  font-size: 34px;\n  font-weight: 600;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  min-width: 60%;\n  margin: 10px 0;\n  font-size: 20px;\n  padding: 10px;\n  border-style: solid;\n    border-color: black;\n  border-width: 2px;\n    border-radius: 4.5%;\n    transition: all 0.5s ease;\n  &:hover {\n    background-color: transparent;\n    transform: scale(1.1);\n  }\n`;\n\nconst Button = styled.button`\n  width: 50%;\n  border: none;\n  padding: 15px 20px;\n  font-size: 14px;\n  background-color: teal;\n  color: white;\n  cursor: pointer;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  &:disabled {\n    color: green;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button2 = styled.button`\n  width: 40%;\n  font-size: 14px;\n  border: none;\n  padding: 15px 15px;\n  background-color: green;\n  color: white;\n  cursor: pointer;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  &:disabled {\n    color: green;\n    cursor: not-allowed;\n  }\n`;\n\nconst Lik = styled.a`\n  margin: 5px 0px;\n  font-size: 12px;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst Error = styled.span`\n  color: red;\n`;\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const { isFetching, error } = useSelector((state) => state.user);\n  // const history = useHistory();\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    console.log(username + password);\n    login(dispatch, { username, password });\n    // history.push(\"/\");\n    // window.location.reload();\n    // window.location.reload(true);\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <Title><center>VOLUNTEER SIGN IN</center></Title>\n        <Form>\n          <Input\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <Input\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          \n          <Button onClick={handleClick} disabled={isFetching}>\n          {/* <Link to=\"/\"> */}\n            LOGIN\n            {/* </Link> */}\n          </Button>\n          \n          {error && <Error>Something went wrong...</Error>}\n          {/* <Lik>DO NOT YOU REMEMBER THE PASSWORD?</Lik>\n          <Button2><Link to=\"/newproduct\" style={{ textDecoration: 'none', color: 'white' }}>CREATE A NEW ACCOUNT</Link></Button2> */}\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Login;\n","import Sidebar from \"./components/sidebar/Sidebar\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport NewProduct from \"./pages/newProduct/NewProduct\";\nimport Login from \"./pages/login/Login\";\nimport { useSelector } from \"react-redux\";\n\n\nfunction App() {\n  let volunteer = false;\n  try{\n    const volunteer1 = useSelector((state) => state.user.currentUser.isVolunteer);\n    console.log(\"hello\" + volunteer1);\n\n    volunteer = volunteer1;\n  }\n  catch(err){\n    console.log(err);\n    // volunteer = false;\n  }\n  // const volunteer = true;\n  console.log(volunteer);\n  if (!volunteer){\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\"><Login /></Route>\n        </Switch>\n      </Router>\n    );\n  }\n  else{\n    return (\n      <Router>\n        <Switch>\n          <>\n            <Topbar />\n            <div className=\"container\">\n              <Sidebar />\n              <Route path=\"/\"><NewProduct /></Route>\n                {/* <NewProduct />\n              </Route> */}\n              \n            </div>\n          </>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userRedux\";\nimport productReducer from \"./productRedux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  product: productReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading=\"null\" persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}